/******************************************************************************
 * Copyright (c) 2013 by Andrew Szell (coldcue@gmail.com)                     *
 *                                                                            *
 * All rights reserved. No part of this code may be reproduced, distributed,  *
 * or transmitted in any form or by any means, including photocopying,        *
 * recording, or other electronic or mechanical methods, without the prior    *
 * written permission of the owner.                                           *
 ******************************************************************************/

!function (e) {
    e.prompt = function (t, i) {
        void 0 !== i && void 0 != i.classes && "string" == typeof i.classes && (i = {box: i.classes}), e.prompt.options = e.extend({}, e.prompt.defaults, i), e.prompt.currentPrefix = e.prompt.options.prefix;
        var a = e.prompt.options, n = e(document.body), o = e(window), r = '<div class="' + e.prompt.options.prefix + "box " + a.classes.box + '">';
        r += a.useiframe && e("object, applet").length > 0 ? '<iframe src="javascript:false;" style="display:block;position:absolute;z-index:-1;" class="' + a.prefix + "fade " + a.classes.fade + '"></iframe>' : '<div class="' + a.prefix + "fade " + a.classes.fade + '"></div>', r += '<div class="' + a.prefix + " " + a.classes.prompt + '">' + '<form action="javascript:false;" onsubmit="return false;" class="' + a.prefix + 'form">' + '<div class="' + a.prefix + "close " + a.classes.close + '">' + a.closeText + "</div>" + '<div class="' + a.prefix + 'states"></div>' + "</form>" + "</div>" + "</div>", e.prompt.jqib = e(r).appendTo(n), e.prompt.jqi = e.prompt.jqib.children("." + a.prefix), e.prompt.jqif = e.prompt.jqib.children("." + a.prefix + "fade"), t.constructor == String && (t = {state0: {title: a.title, html: t, buttons: a.buttons, position: a.position, focus: a.focus, submit: a.submit}}), e.prompt.options.states = {};
        var s, l;
        for (s in t)l = e.extend({}, e.prompt.defaults.state, {name: s}, t[s]), e.prompt.addState(l.name, l), "" === e.prompt.currentStateName && (e.prompt.currentStateName = l.name);
        var c = e.prompt.jqi.find("." + a.prefix + "states ." + a.prefix + "state").eq(0);
        e.prompt.goToState(c.data("jqi-name")), e.prompt.jqi.on("click", "." + a.prefix + "buttons button", function () {
            var t = e(this), i = t.parents("." + a.prefix + "state"), n = e.prompt.options.states[i.data("jqi-name")], o = i.children("." + a.prefix + "message"), r = n.buttons[t.text()] || n.buttons[t.html()], s = {};
            if (void 0 == r)for (var l in n.buttons)(n.buttons[l].title == t.text() || n.buttons[l].title == t.html()) && (r = n.buttons[l].value);
            e.each(e.prompt.jqi.children("form").serializeArray(), function (e, t) {
                void 0 === s[t.name] ? s[t.name] = t.value : typeof s[t.name] == Array || "object" == typeof s[t.name] ? s[t.name].push(t.value) : s[t.name] = [s[t.name], t.value]
            });
            var c = new e.Event("impromptu:submit");
            c.stateName = n.name, c.state = i, i.trigger(c, [r, o, s]), c.isDefaultPrevented() || e.prompt.close(!0, r, o, s)
        });
        var d = function () {
            if (a.persistent) {
                var t = a.top.toString().indexOf("%") >= 0 ? o.height() * (parseInt(a.top, 10) / 100) : parseInt(a.top, 10), i = parseInt(e.prompt.jqi.css("top").replace("px", ""), 10) - t;
                e("html,body").animate({scrollTop: i}, "fast", function () {
                    var t = 0;
                    e.prompt.jqib.addClass(a.prefix + "warning");
                    var i = setInterval(function () {
                        e.prompt.jqib.toggleClass(a.prefix + "warning"), t++ > 1 && (clearInterval(i), e.prompt.jqib.removeClass(a.prefix + "warning"))
                    }, 100)
                })
            } else e.prompt.close(!0)
        }, u = function (t) {
            var i = window.event ? event.keyCode : t.keyCode;
            if (27 == i && d(), 9 == i) {
                var a = e("input,select,textarea,button", e.prompt.getCurrentState()), n = !t.shiftKey && t.target == a[a.length - 1], o = t.shiftKey && t.target == a[0];
                if (n || o)return setTimeout(function () {
                    if (a) {
                        var e = a[o === !0 ? a.length - 1 : 0];
                        e && e.focus()
                    }
                }, 10), !1
            }
        };
        return e.prompt.position(), e.prompt.style(), e.prompt.jqif.click(d), o.resize({animate: !1}, e.prompt.position), e.prompt.jqi.find("." + a.prefix + "close").click(e.prompt.close), e.prompt.jqib.on("keydown", u).on("impromptu:loaded", a.loaded).on("impromptu:close", a.close).on("impromptu:statechanging", a.statechanging).on("impromptu:statechanged", a.statechanged), e.prompt.jqif[a.show](a.overlayspeed), e.prompt.jqi[a.show](a.promptspeed, function () {
            e.prompt.jqib.trigger("impromptu:loaded")
        }), a.timeout > 0 && setTimeout(e.prompt.close, a.timeout), e.prompt.jqib
    }, e.prompt.defaults = {prefix: "jqi", classes: {box: "", fade: "", prompt: "", close: "", title: "", message: "", buttons: "", button: "", defaultButton: ""}, title: "", closeText: "&times;", buttons: {Ok: !0}, loaded: function () {
    }, submit: function () {
    }, close: function () {
    }, statechanging: function () {
    }, statechanged: function () {
    }, opacity: .6, zIndex: 999, overlayspeed: "slow", promptspeed: "fast", show: "fadeIn", focus: 0, useiframe: !1, top: "15%", position: {container: null, x: null, y: null, arrow: null, width: null}, persistent: !0, timeout: 0, states: {}, state: {name: null, title: "", html: "", buttons: {Ok: !0}, focus: 0, position: {container: null, x: null, y: null, arrow: null, width: null}, submit: function () {
        return!0
    }}}, e.prompt.currentPrefix = e.prompt.defaults.prefix, e.prompt.currentStateName = "", e.prompt.setDefaults = function (t) {
        e.prompt.defaults = e.extend({}, e.prompt.defaults, t)
    }, e.prompt.setStateDefaults = function (t) {
        e.prompt.defaults.state = e.extend({}, e.prompt.defaults.state, t)
    }, e.prompt.position = function (t) {
        var i = e.fx.off, a = e.prompt.getCurrentState(), n = e.prompt.options.states[a.data("jqi-name")], o = n ? n.position : void 0, r = e(window), s = document.body.scrollHeight, l = e(window).height(), c = (e(document).height(), s > l ? s : l), d = parseInt(r.scrollTop(), 10) + (e.prompt.options.top.toString().indexOf("%") >= 0 ? l * (parseInt(e.prompt.options.top, 10) / 100) : parseInt(e.prompt.options.top, 10));
        if (void 0 !== t && t.data.animate === !1 && (e.fx.off = !0), e.prompt.jqib.css({position: "absolute", height: c, width: "100%", top: 0, left: 0, right: 0, bottom: 0}), e.prompt.jqif.css({position: "absolute", height: c, width: "100%", top: 0, left: 0, right: 0, bottom: 0}), o && o.container) {
            var u = e(o.container).offset();
            e.isPlainObject(u) && void 0 !== u.top && (e.prompt.jqi.css({position: "absolute"}), e.prompt.jqi.animate({top: u.top + o.y, left: u.left + o.x, marginLeft: 0, width: void 0 !== o.width ? o.width : null}), d = u.top + o.y - (e.prompt.options.top.toString().indexOf("%") >= 0 ? l * (parseInt(e.prompt.options.top, 10) / 100) : parseInt(e.prompt.options.top, 10)), e("html,body").animate({scrollTop: d}, "slow", "swing", function () {
            }))
        } else o && o.width ? (e.prompt.jqi.css({position: "absolute", left: "50%"}), e.prompt.jqi.animate({top: o.y || d, left: o.x || "50%", marginLeft: -1 * (o.width / 2), width: o.width})) : e.prompt.jqi.css({position: "absolute", top: d, left: "50%", marginLeft: -1 * (e.prompt.jqi.outerWidth() / 2)});
        void 0 !== t && t.data.animate === !1 && (e.fx.off = i)
    }, e.prompt.style = function () {
        e.prompt.jqif.css({zIndex: e.prompt.options.zIndex, display: "none", opacity: e.prompt.options.opacity}), e.prompt.jqi.css({zIndex: e.prompt.options.zIndex + 1, display: "none"}), e.prompt.jqib.css({zIndex: e.prompt.options.zIndex})
    }, e.prompt.get = function () {
        return e("." + e.prompt.currentPrefix)
    }, e.prompt.addState = function (t, i, a) {
        var n, o, r = "", s = null, l = "", c = "", d = e.prompt.options, u = e("." + e.prompt.currentPrefix + "states"), h = 0;
        i = e.extend({}, e.prompt.defaults.state, {name: t}, i), null !== i.position.arrow && (l = '<div class="' + d.prefix + "arrow " + d.prefix + "arrow" + i.position.arrow + '"></div>'), i.title && "" !== i.title && (c = '<div class="lead ' + d.prefix + "title " + d.classes.title + '">' + i.title + "</div>"), r += '<div id="' + d.prefix + "state_" + t + '" class="' + d.prefix + 'state" data-jqi-name="' + t + '" style="display:none;">' + l + c + '<div class="' + d.prefix + "message " + d.classes.message + '">' + i.html + "</div>" + '<div class="' + d.prefix + "buttons " + d.classes.buttons + '"' + (e.isEmptyObject(i.buttons) ? 'style="display:none;"' : "") + ">";
        for (n in i.buttons)o = i.buttons[n], defbtn = i.focus === h ? e.prompt.currentPrefix + "defaultbutton " + d.classes.defaultButton : "", "object" == typeof o ? (r += '<button class="' + d.classes.button + " " + defbtn, "undefined" != typeof o.classes && (r += " " + (e.isArray(o.classes) ? o.classes.join(" ") : o.classes) + " "), r += '" name="' + d.prefix + "_" + t + "_button" + o.title.replace(/[^a-z0-9]+/gi, "") + '" id="' + d.prefix + "_" + t + "_button" + o.title.replace(/[^a-z0-9]+/gi, "") + '" value="' + o.value + '">' + o.title + "</button>") : r += '<button class="' + d.classes.button + " " + defbtn + '" name="' + d.prefix + "_" + t + "_button" + n + '" id="' + d.prefix + "_" + t + "_button" + n + '" value="' + o + '">' + n + "</button>", h++;
        return r += "</div></div>", s = e(r), s.on("impromptu:submit", i.submit), void 0 !== a ? u.find("#" + e.prompt.currentPrefix + "state_" + a).after(s) : u.append(s), e.prompt.options.states[t] = i, s
    }, e.prompt.removeState = function (t) {
        var i = e.prompt.getState(t), a = function () {
            i.remove()
        };
        return 0 === i.length ? !1 : (i.is(":visible") ? i.next().length > 0 ? e.prompt.nextState(a) : e.prompt.prevState(a) : i.slideUp("slow", a), !0)
    }, e.prompt.getState = function (t) {
        return e("#" + e.prompt.currentPrefix + "state_" + t)
    }, e.prompt.getStateContent = function (t) {
        return e.prompt.getState(t)
    }, e.prompt.getCurrentState = function () {
        return e.prompt.getState(e.prompt.getCurrentStateName())
    }, e.prompt.getCurrentStateName = function () {
        return e.prompt.currentStateName
    }, e.prompt.goToState = function (t, i, a) {
        var n = (e.prompt.get(), e.prompt.options), o = e.prompt.getState(t), r = n.states[o.data("jqi-name")], s = new e.Event("impromptu:statechanging");
        return"function" == typeof i && (a = i, i = !1), e.prompt.jqib.trigger(s, [e.prompt.getCurrentStateName(), t]), !s.isDefaultPrevented() && o.length > 0 && (e.prompt.jqi.find("." + e.prompt.currentPrefix + "parentstate").removeClass(e.prompt.currentPrefix + "parentstate"), i ? (e.prompt.jqi.find("." + e.prompt.currentPrefix + "substate").not(o).slideUp(n.promptspeed).removeClass("." + e.prompt.currentPrefix + "substate").find("." + e.prompt.currentPrefix + "arrow").hide(), e.prompt.jqi.find("." + e.prompt.currentPrefix + "state:visible").addClass(e.prompt.currentPrefix + "parentstate"), o.addClass(e.prompt.currentPrefix + "substate")) : e.prompt.jqi.find("." + e.prompt.currentPrefix + "state").not(o).slideUp(n.promptspeed).find("." + e.prompt.currentPrefix + "arrow").hide(), e.prompt.currentStateName = r.name, o.slideDown(n.promptspeed, function () {
            var i = e(this);
            "string" == typeof r.focus ? i.find(r.focus).eq(0).focus() : i.find("." + e.prompt.currentPrefix + "defaultbutton").focus(), i.find("." + e.prompt.currentPrefix + "arrow").show(n.promptspeed), "function" == typeof a && e.prompt.jqib.on("impromptu:statechanged", a), e.prompt.jqib.trigger("impromptu:statechanged", [t]), "function" == typeof a && e.prompt.jqib.off("impromptu:statechanged", a)
        }), i || e.prompt.position()), o
    }, e.prompt.nextState = function (t) {
        var i = e("#" + e.prompt.currentPrefix + "state_" + e.prompt.getCurrentStateName()).next();
        return e.prompt.goToState(i.attr("id").replace(e.prompt.currentPrefix + "state_", ""), t)
    }, e.prompt.prevState = function (t) {
        var i = e("#" + e.prompt.currentPrefix + "state_" + e.prompt.getCurrentStateName()).prev();
        e.prompt.goToState(i.attr("id").replace(e.prompt.currentPrefix + "state_", ""), t)
    }, e.prompt.close = function (t, i, a, n) {
        e.prompt.jqib.fadeOut("fast", function () {
            t && e.prompt.jqib.trigger("impromptu:close", [i, a, n]), e.prompt.jqib.remove(), e(window).off("resize", e.prompt.position)
        })
    }, e.fn.prompt = function (t) {
        void 0 == t && (t = {}), void 0 == t.withDataAndEvents && (t.withDataAndEvents = !1), e.prompt(e(this).clone(t.withDataAndEvents).html(), t)
    }
}(jQuery);
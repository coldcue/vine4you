/******************************************************************************
 * Copyright (c) 2013 by Andrew Szell (coldcue@gmail.com)                     *
 *                                                                            *
 * All rights reserved. No part of this code may be reproduced, distributed,  *
 * or transmitted in any form or by any means, including photocopying,        *
 * recording, or other electronic or mechanical methods, without the prior    *
 * written permission of the owner.                                           *
 ******************************************************************************/

!function (t) {
    "function" == typeof define && define.amd ? define(["jquery"], t) : t(jQuery)
}(function (t) {
    function e(t) {
        return r.raw ? t : decodeURIComponent(t.replace(i, " "))
    }

    function n(t) {
        0 === t.indexOf('"') && (t = t.slice(1, -1).replace(/\\"/g, '"').replace(/\\\\/g, "\\")), t = e(t);
        try {
            return r.json ? JSON.parse(t) : t
        } catch (n) {
        }
    }

    var i = /\+/g, r = t.cookie = function (i, s, o) {
        if (void 0 !== s) {
            if (o = t.extend({}, r.defaults, o), "number" == typeof o.expires) {
                var a = o.expires, u = o.expires = new Date;
                u.setDate(u.getDate() + a)
            }
            return s = r.json ? JSON.stringify(s) : String(s), document.cookie = [r.raw ? i : encodeURIComponent(i), "=", r.raw ? s : encodeURIComponent(s), o.expires ? "; expires=" + o.expires.toUTCString() : "", o.path ? "; path=" + o.path : "", o.domain ? "; domain=" + o.domain : "", o.secure ? "; secure" : ""].join("")
        }
        for (var c = document.cookie.split("; "), l = i ? void 0 : {}, h = 0, f = c.length; f > h; h++) {
            var p = c[h].split("="), m = e(p.shift()), d = p.join("=");
            if (i && i === m) {
                l = n(d);
                break
            }
            i || (l[m] = n(d))
        }
        return l
    };
    r.defaults = {}, t.removeCookie = function (e, n) {
        return void 0 !== t.cookie(e) ? (t.cookie(e, "", t.extend({}, n, {expires: -1})), !0) : !1
    }
});